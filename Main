*/
Author: Alejandro Porter
Due Date: Feb 9 2023
Purpose: Ordering a pizza through a pizza place's website/ordering service
/*
package WPP2;
//for swing elements
import java.awt.*;
import javax.swing.*;
//for order and delivery date
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
//for random num
import java.util.Objects;
import java.util.Random;

interface Pizza {
    String getDescription();
    double getCost();
}
//PIZZA FLAVORS
class Pesto implements Pizza {
    public String getDescription() {
        return "Pesto";
    }

    public double getCost() {
        return 7.99;
    }
}
class Pepperoni implements Pizza {
    public String getDescription() {
        return "Pepperoni";
    }

    public double getCost() {
        return 9.99;
    }
}
class Sriracha implements Pizza{
    public String getDescription() {
        return "Sriracha";
    }
    public double getCost() {
        return 10.99;
    }
}
class Pineapple implements Pizza{
    public String getDescription() {
        return "Pineapple";
    }
    public double getCost() {
        return 8.99;
    }
}
class PizzaShop extends JFrame {
    private final JRadioButton pestoRB;  //Pesto Radio Button
    private final JRadioButton pepRB;    //Pepperoni Radio Button
    private final JRadioButton srirRB;    //Sriracha Radio Button
    private final JRadioButton pineRB;   //Pineapple Radio Button
    private final JTextArea orderTextArea;
    public PizzaShop() {
        super("Woodstock's Pizza");
        setLayout(new FlowLayout());

        pestoRB = new JRadioButton("Pesto Pizza", true);
        add(pestoRB);
        pepRB = new JRadioButton("Pepperoni Pizza");
        add(pepRB);
        srirRB = new JRadioButton("Sriracha Pizza");
        add(srirRB);
        pineRB = new JRadioButton("Pineapple Pizza");
        add(pineRB);

        ButtonGroup pizzaGroup = new ButtonGroup();
        pizzaGroup.add(pestoRB);
        pizzaGroup.add(pepRB);
        pizzaGroup.add(srirRB);
        pizzaGroup.add(pineRB);

        JButton orderButton = new JButton("Order");
        add(orderButton);
        //Dimensions of Text Area
        orderTextArea = new JTextArea(15, 40);
        orderTextArea.setEditable(false);
        add(new JScrollPane(orderTextArea));

        orderButton.addActionListener(e -> {
            //Date
            DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
            DateFormat dateFormat1 = new SimpleDateFormat("MM/dd/yyyy");
            Date date = new Date();
            String orderDate = dateFormat.format(date);
            String deliveryDate = dateFormat1.format(date);
            //for pizza selection
            Pizza pizza = null;
            //Array declaration for menu discounts
            String[] discounts = {"15% off any boneless wings!\n", "25% off any large pizza!\n",
                    "10% off all drinks!\n", "10% off calzones!\n"};
            //Generate a random number for order number
            Random rand = new Random();
            int randnum = rand.nextInt(99) + 1;
            //Control statements for pizza selection
            if (pestoRB.isSelected()) {
                pizza = new Pesto();
            }
            else if(pepRB.isSelected()){
                pizza = new Pepperoni();
            }
            else if(srirRB.isSelected()){
                pizza = new Sriracha();
            }
            else if(pineRB.isSelected()){
                pizza = new Pineapple();
            }
            switch (Objects.requireNonNull(pizza).getDescription()) {
                case "Pesto" -> orderTextArea.setText("You have ordered a Pesto pizza.\n");
                case "Pepperoni" -> orderTextArea.setText("You have ordered a Pepperoni pizza.\n");
                case "Sriracha" -> orderTextArea.setText("You have ordered a Sriracha pizza.\n");
                case "Pineapple" -> orderTextArea.setText("You have ordered a Pineapple pizza.\n");
                default -> throw new IllegalStateException("Unexpected value: " + pizza.getDescription());
            }
            //Display Receipt
            orderTextArea.append("Order Number: "+randnum+"\n");
            orderTextArea.append("The cost of your order is $" + pizza.getCost()+"\n");
            orderTextArea.append("Order placed on " + orderDate+"\n");
            orderTextArea.append("Please pick up your pizza at the shop by the end of "+deliveryDate+"\n");
            orderTextArea.append("Bring your date for our Valentine's Day specials!\n");
            orderTextArea.append(discounts[0]);
            orderTextArea.append(discounts[1]);
            orderTextArea.append(discounts[2]);
            orderTextArea.append(discounts[3]);
            orderTextArea.append("Thank you for choosing Woodstock's Pizza! Open 24/7!\n");
        });
        //Dimensions of Window
        setSize(600, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }
    public static void main(String[] args) {
        new PizzaShop();
    }
}
